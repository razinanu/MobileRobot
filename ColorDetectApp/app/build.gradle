apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            applicationId = "mobileRobot.imageProcessing.android.colorDetector"
            minSdkVersion.apiLevel = 22
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = "1.0"
        }
    }

    android.buildTypes {
        release {
            // minifyEnabled = false
            // proguardFiles = getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android.buildTypes {
        release {
            // minifyEnabled = false
            // proguardFiles = getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    def openCVAndroidSdkDir = "/Applications/OpenCV-android-sdk/sdk/native"
    android.ndk {
        moduleName = "native"
        cppFlags += "-I${file(openCVAndroidSdkDir + "/jni/include")}".toString()
        cppFlags += "-frtti"
        cppFlags += "-fexceptions"
        ldLibs += ["log", "opencv_java3"]
        stl    = "gnustl_static"
    }

    android.productFlavors {
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
        create("arm") {
            ndk.abiFilters += "armeabi"
            ndk.ldFlags += "-L${file('src/main/jniLibs/armeabi')}".toString()
        }
        create("arm7") {
            ndk.abiFilters += "armeabi-v7a"
            ndk.ldFlags += "-L${file('src/main/jniLibs/armeabi-v7a')}".toString()
        }
        create("arm8") {
            ndk.abiFilters += "arm64-v8a"
            ndk.ldFlags += "-L${file('src/main/jniLibs/arm64-v8a')}".toString()
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':openCVLibrary300')
}
